{"version":3,"sources":["firebase/context.js","firebase/firebase.js","firebase/index.js","components/meeting/Meeting.js","components/videoCalling/MultiVideoCall.js","components/login/Login.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","user_AnalyticsHandler","stateValue","stateMode","a","countVal","database","ref","auth","currentUser","uid","once","then","snapshot","val","set","error","errorCode","code","errorMessage","message","console","log","saveMeetingRoomData","rooms","self","forEach","element","saveSingleMeetingRoomData","name","id","slots","data","db","firestore","docName","docRef","collection","doc","getMeetingRoomData","result","get","snapShots","empty","docs","roomDetails","push","meetingRooms","attachMeetingRoomListener","onSnapshot","updateMeetingRooms","updateMeetingRoomDataAccLimit","roomName","roomId","slotName","availableValue","callback","filter","value","slot","index","getUserId","runTransaction","transaction","exists","slotIndex","messgage","catch","updateMeetingRoomData","available","userId","update","getMeetingOfficalsData","where","email","isOffical","user","forCall","phoneNumber","toLowerCase","replace","getCurrentTimeStampV2","Promise","resolve","reject","fetch","res","json","window","date","getDate","rej","addHotspotAnalytics","videoCallId","path","ServerValue","increment","signInWithId","password","signInWithEmailAndPassword","cred","defaultImageUrl","signUpWithId","createUserWithEmailAndPassword","response","updateProfile","displayName","photoURL","loadUser","forceCreateNew","this","FirebaseObj","Component","getInitals","nameArr","trim","split","length","toUpperCase","MultiVideoCall","props","disconnectAndShowPopup","showCustomMessage","state","isSlotAvailable","forceExit","showInfoPopUp","showBusyPopup","checkSlotAvailable","clientIdentity","isOfficial","checkIfSlotAlreadyTaken","leaveRoom","processProps","newProps","roomData","liveRooms","room","roomParentId","ava","setState","showRest","checUserPresence","participants","found","participant","identity","slotReset","getParticipantClass","list","Object","keys","i","sid","freeParticipantClass","callboxMap","getParticipantClassUsingMap","participantLeaveRoom","par","showPopup","wegotourselfacall","setTimeout","document","getElementById","remove","participantDisconnected","openWhiteboardLayout","querySelector","classList","contains","currentLayoutClass","add","closeWhiteboardLayout","handleWhiteBoardButton","e","preventDefault","showWhiteborad","roomIdErr","previewTracks","localMediaAvailable","hasJoinedRoom","activeRoom","audioEnabled","videoEnabled","screenShared","remoteScreenShared","remoteScreens","screenTrack","remoteScreenTrack","showNotification","currentParticipant","2","3","4","5","6","7","8","localMedia","remoteMedia","timerRef","setLocalMediaRef","setRemoteMediaRef","joinRoom","bind","roomJoined","attachLocalParticipantTracks","onCameraButtonClick","onAudioButtonClick","shareScreen","handleTrackEnabled","participantConnected","trackSubscribed","trackUnsubscribed","handleParticipantTrackEnabled","handleParticipantTrackDisabled","stopLocalScreenShare","startScreenShare","_startScreenCapture","handleLocalSharedScreen","handleRemoteSharedScreen","stopRemoteSharedScreen","openFullscreen","onCallDisconnect","parent","leaveTheCall","location","href","axios","post","userName","results","token","notification","timeout","connectOptions","audio","video","width","min","ideal","max","height","aspectRatio","frameRate","tracks","Video","connect","localParticipant","videoTracks","pub","track","disable","audioTracks","enable","previewContainer","on","stop","publication","detach","updateRoomStatus","size","parentDiv","createElement","div","span","colorClass","Math","floor","random","rgx","RegExp","initials","matchAll","shift","pop","innerText","appendChild","spanName","button","icon","videoDiv","kind","setAttribute","container","attach","isEnabled","Array","from","values","leaveCall","disconnect","parentElement","firstChild","childNodes","event","leavevRoomCallNow","navigator","getDisplayMedia","mediaDevices","getUserMedia","mediaSource","that","line1","line2","stream","getAudioTracks","map","LocalAudioTrack","getVideoTracks","LocalVideoTrack","concat","getTracks","onended","remoteScreen","publishTracks","unpublishTracks","elem","children","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","remoteShared","className","main3dContainer","child3dContainer","style","child3dContainerStyle","display","context","textAlign","fontSize","margin","onClick","alt","src","class","backgroundColor","onHangUpButtonClick","contextType","Login","employeId","_loading","forceDisable","forceUpdate","componentDidMount","showLoginError","onInputChange","target","substr","err","validateEmail","test","String","onFormSubmit","backgroundImage","showLoggingIn","onSubmit","type","placeholder","onChange","autoComplete","autoCorrect","required","color","disabled","App","createHashHistory","showVideoCall","isCurrentMeetingRoomOfficial","MeetingRoomMessage","busyRoomMessage","videoCall","createRef","activeMeetingRoomDetails","removeLoader","load","joinFirstSlot","onSlotJoin","signIn","gettingMeetingRoomErrMessage","Messagedoc","meetingRoomMsg","updateMeetingRoom","closeMeetingRoom","localStorage","getItem","showMeetingRoomPopup","showMeetingRoomBusyPopup","checkForSlotAdmin","adminArray","indexOf","hideCrossBtn","slotId","adminID","showCrossBtn","open","currentSlotRest","addAnalytics","listener","onAuthStateChanged","authUser","slice","swal","title","Boolean","hostname","match","ReactDOM","render","Provider","StrictMode","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80791429.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = (Component) => (props) => (\n  <FirebaseContext.Consumer>\n    {(firebase) => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\nimport moment from \"moment\";\n\nconst config = {\n  apiKey: \"AIzaSyCneEInwQf9s42gCzrX1ybhEvqO8Z1FcjM\",\n  authDomain: \"broad-expo-rent-dj.firebaseapp.com\",\n  databaseURL: \"https://broad-expo-rent-dj.firebaseio.com\",\n  projectId: \"broad-expo-rent-dj\",\n  storageBucket: \"broad-expo-rent-dj.appspot.com\",\n  messagingSenderId: \"60481384412\",\n  appId: \"1:60481384412:web:d39202acf4d3a9df266919\",\n  measurementId: \"G-N8YN11228Z\"\n};\n\n// const config = {\n//   apiKey: \"AIzaSyCvj4-A1bOwcmn60soy9lntpPXHuGFZf1U\",\n//   authDomain: \"zs-associates-virtual.firebaseapp.com\",\n//   projectId: \"zs-associates-virtual\",\n//   storageBucket: \"zs-associates-virtual.appspot.com\",\n//   messagingSenderId: \"411061106063\",\n//   appId: \"1:411061106063:web:cc40094724cbd8b58cc7fa\",\n//   databaseURL: \"https://zs-associates-virtual-default-rtdb.firebaseio.com\",\n//   measurementId: \"G-8RYCCHL3T0\"\n// };\n\napp.initializeApp(config);\nclass Firebase {\n  constructor() {\n    this.app = app;\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.firestore = app.firestore();\n    this.database = app.database();\n\n    window.FirebaseObj = this;\n    this.currentUser = null;\n    this.meetingRooms = null;\n    this.updateMeetingRooms = null;\n\n    this.isOffical = false;\n    this.getCurrentTimeStampV2();\n  }\n\n  user_AnalyticsHandler = async (stateValue, stateMode) => {\n    try {\n      if (stateValue === \"Meeting\" && stateMode === \"enter\") {\n        var countVal = 0;\n        this.database.ref('/user_analytics/' + this.auth.currentUser.uid + '/Meeting_Visit_Count').once('value').then((snapshot) => {\n          countVal = (snapshot.val());\n          countVal++;\n          this.database.ref('/user_analytics/' + this.auth.currentUser.uid + '/Meeting_Visit_Count').set(countVal);\n          this.database.ref('/user_analytics/' + this.auth.currentUser.uid + '/Current_Room').set(\"Meeting\");\n\n        });\n      } else if (stateValue === \"Meeting\" && stateMode === \"exit\") {\n        this.database.ref('/user_analytics/' + this.auth.currentUser.uid + '/Current_Room').set(\"none\");\n      }\n      else if (stateValue === \"Call\" && stateMode === \"enter\") {\n        var countVal = 0;\n        this.database.ref('/user_analytics/' + this.auth.currentUser.uid + '/Meeting_Visit_Count').once('value').then((snapshot) => {\n          countVal = (snapshot.val());\n          countVal++;\n          this.database.ref('/user_analytics/' + this.auth.currentUser.uid + '/Meeting_Visit_Count').set(countVal);\n          this.database.ref('/user_analytics/' + this.auth.currentUser.uid + '/Current_Room').set(\"Call\");\n        });\n      } else if (stateValue === \"Call\" && stateMode === \"exit\") {\n        this.database.ref('/user_analytics/' + this.auth.currentUser.uid + '/Current_Room').set(\"none\");\n      }\n\n    } catch (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(\"code: \" + errorCode + \" & ErrorMsg: \" + errorMessage);\n    }\n  };\n\n  //#region meeting Room Functions\n  saveMeetingRoomData = (rooms) => {\n    var self = this;\n    rooms.forEach(element => {\n      self.saveSingleMeetingRoomData(element.name, element.id, element.slots);\n    });\n  }\n\n  saveSingleMeetingRoomData = async (name, id, data) => {\n    try {\n      const db = app.firestore();\n      const docName = id + \"_\" + name\n      const docRef = db.collection('meetingRoom').doc(docName);\n      await docRef.set({\n        id: id,\n        name: name,\n        slots: data\n      })\n      console.log(\"dataSaved\");\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  getMeetingRoomData = async () => {\n    try {\n      var result = [];\n      const db = app.firestore();\n      const docRef = db.collection('meetingRoom');\n      const snapShots = await docRef.get();\n      console.log(snapShots);\n      if (!snapShots.empty) {\n        var docs = snapShots.docs;\n        docs.forEach(doc => {\n          var data = doc.data();\n          var roomDetails = {};\n          roomDetails.id = data.id;\n          roomDetails.name = data.name;\n          roomDetails.slots = data.slots;\n          result.push(roomDetails);\n        });\n        this.meetingRooms = result;\n        console.log(this.meetingRooms);\n      }\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  attachMeetingRoomListener = () => {\n    const self = this;\n    const db = app.firestore();\n    const docRef = db.collection('meetingRoom');\n    docRef.onSnapshot(function (snapShots) {\n      var result = [];\n      // console.log(snapShots);\n      if (!snapShots.empty) {\n        var docs = snapShots.docs;\n        docs.forEach(doc => {\n          var data = doc.data();\n          var roomDetails = {};\n          roomDetails.id = data.id;\n          roomDetails.name = data.name;\n          roomDetails.slots = data.slots;\n          result.push(roomDetails);\n        });\n        self.meetingRooms = result;\n        // console.log(self.meetingRooms);\n        self.updateMeetingRooms();\n        // self.updateMeetingRoomData(\"Enquiry\", 1, \"enquiry-slot-2\", false);\n      }\n\n    }, function (error) {\n      console.log(error);\n    });\n  }\n\n  updateMeetingRoomDataAccLimit = (roomName, roomId, slotName, availableValue, callback) => {\n\n    console.log(roomName, slotName, availableValue);\n    var docName = roomId + \"_\" + roomName;\n\n    var data = this.meetingRooms.filter(value => value.id == roomId)[0];\n    console.log(data);\n    var slotIndex = -1;\n    data.slots.forEach((slot, index) => {\n      if (slot.id === slotName) {\n        slotIndex = index\n      }\n    });\n    let userId = this.getUserId(this.currentUser, true);\n\n    const db = app.firestore();\n    const docRef = db.collection('meetingRoom').doc(docName);\n\n    //transcation \n    return db.runTransaction(function (transaction) {\n      return transaction.get(docRef).then(function (doc) {\n        if (!doc.exists) {\n          throw \"Document does not exist!\";\n        }\n        let slots = doc.data().slots;\n        let slotIndex = -1;\n\n        slots.forEach((slot, index) => {\n          if (slot.id === slotName) {\n            slotIndex = index\n          }\n        });\n\n        if (slotIndex !== -1) {\n          //------------------------------\n          // if (!availableValue) {\n\n          //   if (slots[slotIndex].available) {\n\n          //     slots[slotIndex].userId.push(userId)\n          //     slots[slotIndex].currentCount += 1;\n          //     if (slots[slotIndex].limit == slots[slotIndex].currentCount + 1) {\n          //       slots[slotIndex].available = false\n          //     }\n          //     return transaction.update(docRef, { slots: slots });\n\n          //   } else {\n          //     throw { code: 'busySlot', messgage: \"slot not avalilable\" }\n          //   }\n\n          // } else {\n\n          //   var index = slots[slotIndex].userId.indexOf(userId);\n          //   if (index > -1) {\n          //     slots[slotIndex].userId.splice(index, 1);\n          //   }\n          //   slots[slotIndex].currentCount -= 1;\n          //   slots[slotIndex].available = true\n          //   return transaction.update(docRef, { slots: slots });\n\n          // }\n          //------------------------------\n        } else {\n          throw { code: 'noSlot', messgage: \"slot not foun\" }\n        }\n\n\n      });\n    }).then(function () {\n      console.log(\"Transaction successfully committed!\");\n      if (callback)\n        callback();\n    }).catch(function (error) {\n      console.log(\"Transaction failed: \", error);\n      if (callback)\n        callback(error);\n    });\n  }\n\n  updateMeetingRoomData = (roomName, roomId, slotName, availableValue, callback) => {\n\n    console.log(roomName, slotName, availableValue);\n    var docName = roomId + \"_\" + roomName;\n    // var data = this.meetingRooms[roomId - 1];\n    var data = this.meetingRooms.filter(value => value.id == roomId)[0];\n    console.log(data);\n    var slotIndex = -1;\n    data.slots.forEach((slot, index) => {\n      if (slot.id === slotName) {\n        slotIndex = index\n      }\n    });\n    if (slotIndex !== -1) {\n      data.slots[slotIndex].available = availableValue;\n      if (availableValue) {\n        data.slots[slotIndex].userId = \"\"\n      } else {\n        data.slots[slotIndex].userId = this.getUserId(this.currentUser, true);\n      }\n    }\n\n    const db = app.firestore();\n    const docRef = db.collection('meetingRoom').doc(docName);\n    //simple\n    // docRef.update({\n    //   slots: data.slots\n    // })\n\n    //transcation \n    return db.runTransaction(function (transaction) {\n      return transaction.get(docRef).then(function (doc) {\n        if (!doc.exists) {\n          throw \"Document does not exist!\";\n        }\n\n        if (!availableValue) {\n          let slots = doc.data().slots;\n          let slotIndex = -1;\n          slots.forEach((slot, index) => {\n            if (slot.id === slotName) {\n              slotIndex = index\n            }\n          });\n          if (slotIndex !== -1) {\n            if (slots[slotIndex].available) {\n              return transaction.update(docRef, { slots: data.slots });\n            } else {\n              throw \"slot not avalilable\"\n            }\n          }\n        }\n        else {\n          return transaction.update(docRef, { slots: data.slots });\n        }\n      });\n    }).then(function () {\n      console.log(\"Transaction successfully committed!\");\n      if (callback)\n        callback();\n    }).catch(function (error) {\n      console.log(\"Transaction failed: \", error);\n      if (callback)\n        callback(error);\n    });\n  }\n\n\n  getMeetingOfficalsData = async () => {\n    try {\n      const db = app.firestore();\n      const docRef = db.collection('meetingRoomOfficials');\n      const doc = await docRef.where(\"members\", \"array-contains\", this.currentUser.email).get();\n      console.log(this.currentUser.uid);\n      // console.log(doc);\n      if (!doc.empty) {\n        this.isOffical = true;\n        console.log(\"found meeting room offical\");\n      }\n      else {\n        this.isOffical = false;\n        console.log(\"Not meeting room offical\");\n      }\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n  //#endregion\n\n\n  getUserId = (user, forCall = false) => {\n    let userId = \"\";\n    if (user.phoneNumber) {\n      userId = `${user.phoneNumber}`\n    } else if (user.email !== null) {\n      userId = user.email;\n      userId = userId.toLowerCase();\n      if (forCall) {\n        // userId = userId.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\n      } else {\n        userId = userId.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\n      }\n    }\n    return userId\n  }\n\n  getCurrentTimeStampV2 = () => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const res = await fetch(\"https://dj-timeserver.glitch.me/date\");\n        const result = await res.json()\n        window.date = result.date\n        resolve(result)\n      } catch (err) {\n        reject(err)\n      }\n    })\n  }\n\n\n  getDate = () => {\n    return new Promise(async (res, rej) => {\n      try {\n        if (window.date) {\n          res(window.date)\n        } else {\n          const result = await this.getCurrentTimeStampV2();\n          window.date = result.date\n          res(window.date)\n        }\n      } catch (error) {\n        rej(error)\n      }\n    })\n  }\n\n  addHotspotAnalytics = async (videoCallId, user) => {\n    if (!videoCallId) {\n      console.error(\"videoCallId is null\");\n      return;\n    }\n    console.log(videoCallId)\n    let userId = window.userId ? window.userId : this.getUserId(user);\n    let date = await this.getDate()\n    let path = `/userAnalytics/${date}/${userId}/videoCall`;\n    const reference = this.database.ref(path)\n    reference.update({\n      [videoCallId]: app.database.ServerValue.increment(1)\n    })\n  }\n\n\n\n\n  signInWithId = (email, password) => {\n    return new Promise(async (res, rej) => {\n      try {\n        const cred = await this.auth.signInWithEmailAndPassword(email, password)\n        console.log(cred.user.email + \" is logged in right now\");\n        res();\n      } catch (error) {\n        rej(error);\n      }\n    })\n  }\n\n  defaultImageUrl = \"https://firebasestorage.googleapis.com/v0/b/djfarmademo.appspot.com/o/profileimages%2Fblank-avatar.png?alt=media&token=2af15226-9bd7-47ce-bc72-f3c1a12a0780\";\n\n  signUpWithId = (email, password, name) => {\n    return new Promise(async (res, rej) => {\n      try {\n        const response = await this.auth.createUserWithEmailAndPassword(email, password);\n        console.log(response.user.email + \" is signedUp in right now\");\n        await response.user.updateProfile({\n          displayName: name,\n          photoURL: this.defaultImageUrl,\n        })\n        res();\n      } catch (error) {\n        rej(error);\n      }\n    })\n  }\n\n\n\n  loadUser = async (email, password, name, forceCreateNew = false, employeeId) => {\n    return new Promise(async (res, rej) => {\n      try {\n        await this.signInWithId(email, password)\n        res();\n      } catch (err) {\n        if (err.code === \"auth/user-not-found\" && forceCreateNew) {\n          try {\n            await this.signUpWithId(email, password, name)\n            // await turnOnUserCard(email)\n            return;\n          } catch (error) {\n            if (error.code === \"NoUserFound\") {\n              rej(error);\n            }\n          }\n        }\n        rej({\n          code: err.code,\n          message: err.message\n        });\n      }\n    })\n  }\n\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from \"./context\";\nimport Firebase from \"./firebase\";\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isMobileOnly } from 'react-device-detect';\n\n\nclass Meeting extends Component {\n\n    state = {\n        rooms: this.props.rooms,\n        activeRoom: 0,\n        showSideMenu: false\n    }\n\n    componentDidMount() {\n        window.FirebaseObj.user_AnalyticsHandler(\"Meeting\", \"enter\");\n    }\n\n    componentWillUnmount() {\n        window.FirebaseObj.user_AnalyticsHandler(\"Meeting\", \"exit\");\n    }\n\n    componentWillReceiveProps(newprops) {\n        this.setState({ rooms: newprops.rooms });\n    }\n\n    onRoomCLick = (room, index) => {\n        this.setState({ activeRoom: index });\n        this.setState({ showSideMenu: false });\n    }\n\n    onSlotJoin = (activeRoom, slot) => {\n\n        // console.log(activeRoom);\n        // console.log(slot);\n        var isOfficial = this.checkForAdmin(slot.adminID, this.props.userID);\n        // console.log(isOfficial);\n        setTimeout(() => {\n            if (isOfficial) {\n                if (this.props.onSlotJoin) {\n                    this.props.onSlotJoin(activeRoom, slot);\n                }\n            } else {\n                if (slot.available) {\n                    // Set room unavailable\n                    if (this.props.onSlotJoin) {\n                        this.props.onSlotJoin(activeRoom, slot);\n                    }\n                }\n            }\n\n        }, 1000);\n\n    };\n\n    showSideMenu = () => {\n        this.setState({ showSideMenu: !this.state.showSideMenu })\n    };\n\n    onHomeClick = () => {\n        if (this.props.onHomeClick) {\n            this.props.onHomeClick();\n        }\n    }\n\n    checkValue = (slot) => {\n        // console.log(slot);\n    }\n\n    checkForAdmin = (adminArray, userId) => {\n        if (adminArray && userId) {\n            if (adminArray.indexOf(userId) != -1) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n\n    checkForAdminInFeature = (feautre, userId) => {\n        if (feautre) {\n            if (feautre.slots) {\n                for (let i = 0; i < feautre.slots.length; i++) {\n                    let room = feautre.slots[i];\n                    if (room.adminID) {\n                        if (this.checkForAdmin(room.adminID, userId)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false\n    }\n\n    render() {\n        let activeRoom = this.state.rooms[this.state.activeRoom];\n\n        return (\n            <>\n                <section className=\"meetingBox\">\n                    <div className=\"meetingBox__header meetingBox__header__gradient\">\n                        {/* <button onClick={event => this.onHomeClick()} className=\"meetingBox_close\"><i className=\"icon-angle-back\"></i></button> */}\n                        <img onClick={event => this.onHomeClick()} src=\"assets/images/abbott-logo-vector 1.png\" alt=\"\" />\n                        <span className={isMobileOnly ? (\"meeting_title\") : (\"\")}>Meeting Room</span>\n                        <button className={`meetingBox__header--toggle ${this.state.showSideMenu ? \"active\" : \"\"}`}\n                            onClick={event => this.showSideMenu()}>\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </button>\n\n                        {/* {!isMobileOnly &&\n                            <button className={`meetingBox_close`} onClick={event => this.onHomeClick()}>\n                            </button>\n                        } */}\n                    </div>\n                    {/*{isMobileOnly && */}\n                    {/*<div className=\"meetingBox__header  meetingBox__header_mobileoverride justify-content-center\">*/}\n                    {/*     <button className={`meetingBox_close_mobile`} onClick={event => this.onHomeClick()}>*/}\n                    {/*        </button>*/}\n                    {/*</div>*/}\n                    {/*}*/}\n\n                    <div className=\"meetingBox__body\">\n                        <aside className={`meetingBox__sidebar ${this.state.showSideMenu ? \"active\" : \"\"}`}>\n                            <ul>\n                                {\n                                    this.state.rooms.map((room, index) => <li key={room.id}\n                                        onClick={event => this.onRoomCLick(room, index)}><a\n                                            className={`cursor-pointer ${(activeRoom.id == room.id) ? \"active\" : \"\"}`}>{room.name}{this.checkForAdminInFeature(room, this.props.userID) ? ' (admin)':''}</a></li>)\n                                }\n                            </ul>\n                            <div className=\"meetingBox__sidebar meetingBox__sidebar_base\"></div>\n                        </aside>\n                        <div className=\"meetingBox__contents\">\n                            {\n                                activeRoom.slots && activeRoom.slots.map(slot =>\n\n                                    <div className={`meetingBox__block ${slot.available ? \"meetingBox__block--gradient\" : \"meetingBox__block--greySolid\"} ${this.checkForAdmin(slot.adminID, this.props.userID) ? 'adminBox' : ''}`} key={slot.id}>\n                                        <h2 className=\"meetingBox__block__title\">{slot.name}</h2>\n                                        <div className=\"meetingBox__block__right\">\n                                            {this.checkForAdmin(slot.adminID, this.props.userID) ? (\n                                                <div className={`meetingBox__block__status ${!slot.available ? \"green\" : \"red\"}`}>{!slot.available ? \"User\" : \"No User\"}</div>\n                                            ) :\n                                                (\n                                                    <div className={`meetingBox__block__status ${slot.available ? \"green\" : \"red\"}`}>{slot.available ? \"Available\" : \"Busy\"}</div>\n                                                )}\n\n                                            <button className=\"meetingBox__block__btn\" onClick={event => this.onSlotJoin(activeRoom, slot)}\n                                                disabled={this.checkForAdmin(slot.adminID, this.props.userID) ? (false) : (!slot.available)}>\n                                                {this.checkForAdmin(slot.adminID, this.props.userID) ? \"Enter Call\" : \"Join Call\"}\n                                            </button>\n\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    </div>\n                </section>\n            </>\n        );\n    }\n}\n\nexport default Meeting;\n","// eslint-disable-next-line no-unused-vars\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Video from 'twilio-video';\nimport { FirebaseContext } from \"../../firebase\";\nimport { LocalVideoTrack, LocalAudioTrack, createLocalVideoTrack } from \"twilio-video\";\n// import { doc } from 'prettier';\n\nexport function getInitals(name) {\n    let result = \"\"\n    if (name) {\n        let nameArr = name.trim().split(\" \")\n        if (nameArr.length > 0) {\n            nameArr.forEach(element => {\n                result += element[0]\n            });\n        } else {\n            result = name[0]\n        }\n        return result.toUpperCase()\n    } else {\n        return \" \"\n    }\n\n}\n\nclass MultiVideoCall extends Component {\n    static contextType = FirebaseContext;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            identity: null,\n            roomId: props.room.roomId,\n            roomName: props.room.roomName,\n            roomIdErr: false,\n            previewTracks: null,\n            localMediaAvailable: false,\n            hasJoinedRoom: false,\n            activeRoom: null,\n            audioEnabled: true,\n            videoEnabled: false,\n            screenShared: false,\n            remoteScreenShared: false,\n            participants: [],\n            remoteScreens: [],\n            screenTrack: null,\n            remoteScreenTrack: null,\n            showNotification: false,\n            isSlotAvailable: false,//* */\n            currentParticipant: null,//* */\n            clientIdentity: \"\",\n            showRest: false,\n            \n         wegotourselfacall: false,\n        };\n\n        this.currentLayoutClass = 'caller_8';\n\n        this.callboxMap = {\n            2: null,\n            3: null,\n            4: null,\n            5: null,\n            6: null,\n            7: null,\n            8: null,\n        }\n\n        this.localMedia = null;\n        this.remoteMedia = null;\n        this.timerRef = null;\n        this.forceExit = false;\n        this.setLocalMediaRef = element => {\n            this.localMedia = element;\n        };\n\n        this.setRemoteMediaRef = element => {\n            this.remoteMedia = element;\n        };\n\n\n        this.joinRoom = this.joinRoom.bind(this);\n        // this.handleroomIdChange = this.handleroomIdChange.bind(this);\n        this.leaveRoom = this.leaveRoom.bind(this);\n        this.roomJoined = this.roomJoined.bind(this);\n        this.attachLocalParticipantTracks = this.attachLocalParticipantTracks.bind(this);\n        this.onCameraButtonClick = this.onCameraButtonClick.bind(this);\n        this.onAudioButtonClick = this.onAudioButtonClick.bind(this);\n        this.shareScreen = this.shareScreen.bind(this);\n        this.handleTrackEnabled = this.handleTrackEnabled.bind(this);\n        this.participantConnected = this.participantConnected.bind(this);\n        this.participantDisconnected = this.participantDisconnected.bind(this);\n        this.trackSubscribed = this.trackSubscribed.bind(this);\n        this.trackUnsubscribed = this.trackUnsubscribed.bind(this);\n        this.handleParticipantTrackEnabled = this.handleParticipantTrackEnabled.bind(this);\n        this.handleParticipantTrackDisabled = this.handleParticipantTrackDisabled.bind(this);\n        this.stopLocalScreenShare = this.stopLocalScreenShare.bind(this);\n        this.startScreenShare = this.startScreenShare.bind(this);\n        this._startScreenCapture = this._startScreenCapture.bind(this);\n        this.handleLocalSharedScreen = this.handleLocalSharedScreen.bind(this);\n        this.handleRemoteSharedScreen = this.handleRemoteSharedScreen.bind(this);\n        this.stopRemoteSharedScreen = this.stopRemoteSharedScreen.bind(this);\n        this.openFullscreen = this.openFullscreen.bind(this);\n        this.onCallDisconnect = this.onCallDisconnect.bind(this);\n        this.showNotification = this.showNotification.bind(this);\n    }\n\n    disconnectAndShowPopup = (showCustomMessage = false, message) => {\n        console.log(this.state.isSlotAvailable, \"///////////////////\");\n        this.forceExit = false;\n        // this.onCallDisconnect();\n        if (showCustomMessage) {\n            this.props.showInfoPopUp(message)\n        } else {\n            this.props.showBusyPopup();\n        }\n    }\n\n    checkSlotAvailable = () => {\n        console.log(this.state.isSlotAvailable, \"///////////////////\");\n        console.log(this.state.clientIdentity, this.props.userId)\n        if (!this.props.isOfficial) {\n            if (!this.state.isSlotAvailable) {\n                if (this.state.clientIdentity !== this.props.userId) {\n                    this.disconnectAndShowPopup();\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    checkIfSlotAlreadyTaken = () => {\n        var self = this;\n\n        console.log(self.state.isSlotAvailable, \"///////////////////\");\n        console.log(self.state.clientIdentity, self.props.userId);\n\n        if (!this.props.isOfficial) {\n            if (!self.state.isSlotAvailable) {\n                if (self.state.clientIdentity !== self.props.userId) {\n                    self.forceExit = true;\n                    self.leaveRoom();\n                    self.props.showBusyPopup();\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    componentDidMount() {\n        this.processProps(this.props);\n        window.parent.leaveTheCall = this.leaveTheCall.bind(this);\n\n        var url = window.location.href;\n        var id = url.split('$')[1];//url.substring(url.lastIndexOf('$') + 1);\n        console.log(id);\n        if (id != null)\n            this.setState({ roomId: id });\n        axios.post(\n            // 'https://videocall.gallantvirtualworld.com/api/token'\n            'https://twiliovideocall.djvirtualevents.com/api/token'\n            // 'https://twilioserver-dot-virtualeventdemo.el.r.appspot.com/api/token'\n            , { name: this.props.userName }).then(results => {\n                if (this.checkSlotAvailable()) {\n                    const { identity, token } = results.data;\n                    this.setState({ identity, token });\n                    this.joinRoom();\n                    return;\n                }\n            });\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps) {\n            // console.log(newProps.liveRooms)\n            // console.log(newProps.room);\n            // console.log(liveRoom);\n            this.processProps(newProps);\n        }\n    }\n\n    processProps = (newProps) => {\n        console.log(\"updated!!!!\");\n        var liveRoom = newProps.liveRooms.filter(value => value.id == newProps.room.roomParentId)[0];\n        var roomData = liveRoom.slots.filter(value => value.id == newProps.room.roomId)[0]\n        var ava = roomData.available;\n        var clientIdentity = roomData.userId;\n        if (ava) {\n            this.setState({\n                isSlotAvailable: ava,\n                clientIdentity: clientIdentity,\n                showRest: false,\n            });\n        } else {\n            this.setState({\n                isSlotAvailable: ava,\n                clientIdentity: clientIdentity,\n            });\n        }\n    }\n\n    onCallDisconnect() {\n        if (this.props.onCallDisconnect) {\n            this.props.onCallDisconnect(this.forceExit);\n        }\n    }\n\n    showNotification(notification) {\n        this.setState({ notification });\n        this.setState({ showNotification: true });\n        setTimeout(() => {\n            this.setState({ showNotification: false });\n            this.setState({ notification: null });\n        }, notification.timeout);\n    }\n\n\n    joinRoom() {\n        /*\n     Show an error message on room name text field if user tries         joining a room without providing a room name. This is enabled by setting `roomIdErr` to true\n       */\n        if (!this.checkSlotAvailable()) {\n            return;\n        }\n\n        if (!this.state.roomId.trim()) {\n            this.setState({ roomIdErr: true });\n            return;\n        }\n\n        console.log(\"Joining room '\" + this.state.roomId + \"'...\");\n        let connectOptions = {\n            name: this.state.roomId,\n            audio: true,\n            video: {\n                width: { min: 640, ideal: 640, max: 1280 },\n                height: { min: 360, ideal: 360, max: 720 },\n                aspectRatio: 1.77,\n                frameRate: { max: 30 },\n            },\n        };\n\n        if (this.state.previewTracks) {\n            connectOptions.tracks = this.state.previewTracks;\n        }\n\n        var self = this;\n        Video.connect(this.state.token, connectOptions).then(this.roomJoined, error => {\n            console.log(error);\n            // alert('Could not connect to Twilio: ' + error.message);\n            self.disconnectAndShowPopup(true, `${error.code === 0 ? 'Camera ' : ''} ${error.message}`);\n        });\n    }\n\n    roomJoined(room) {\n        // Called when a participant joins a room\n        console.log(\"Joined as '\" + this.state.identity + \"'\");\n        // console.log(this.state.isSlotAvailable, \"///////////////////\");\n        this.setState({ activeRoom: room, localMediaAvailable: true, hasJoinedRoom: true });\n\n        this.state.activeRoom.localParticipant.videoTracks.forEach(pub => {\n            if (pub.track.name != \"screen\") {\n                pub.track.disable();\n            }\n        });\n        this.state.activeRoom.localParticipant.audioTracks.forEach(pub => {\n            pub.track.enable();\n        });\n        // display local participant tracks\n        let previewContainer = this.localMedia;\n        if (!previewContainer.querySelector('video')) {\n            this.attachLocalParticipantTracks(room.localParticipant, previewContainer);\n        }\n        var count = 0;\n        room.participants.forEach(participant => {\n            count++;\n            this.participantConnected(participant)\n        });\n\n        // Participant joining room\n        room.on('participantConnected', participant => this.participantConnected(participant));\n\n        // Detach all participant’s track when they leave a room.\n        room.on('participantDisconnected', participant => this.participantLeaveRoom(participant));\n\n        // Once the local participant leaves the room, detach the Tracks\n        // of all other participants, including that of the LocalParticipant.\n        room.on('disconnected', () => {\n            if (this.state.previewTracks) {\n                this.state.previewTracks.forEach(track => {\n                    track.stop();\n                });\n            }\n            // Detach the local media elements\n            room.localParticipant.tracks.forEach(publication => {\n                publication.track.stop();\n                const attachedElements = publication.track.detach();\n                attachedElements.forEach(element => element.remove());\n            });\n\n            room.participants.forEach(participant => this.participantDisconnected(participant));\n\n            this.state.activeRoom = null;\n            this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n            this.onCallDisconnect();\n        });\n\n        if (!this.checkIfSlotAlreadyTaken()) {\n            return;\n        }\n        this.props.updateRoomStatus();\n        var self = this;\n        setTimeout(function () {\n            if (!self.checkIfSlotAlreadyTaken()) {\n                return;\n            }\n        }, 1500);\n\n\n        if (this.props.isOfficial) {\n            this.checUserPresence(room.participants)\n        } else {\n            if (room.participants.size === 0) {\n                this.props.showPopup();\n            }\n        }\n    }\n\n    checUserPresence = (participants) => {\n        //check if not availabe\n        if (!this.state.isSlotAvailable && this.state.clientIdentity.length > 0) {\n            var self = this;\n            var found = false;\n            console.log(\"searching for \" + self.state.clientIdentity);\n            participants.forEach(participant => {\n                if (participant.identity == self.state.clientIdentity) {\n                    found = true;\n                    console.log(participant.identity);\n                }\n            });\n            if (!found) {\n                console.log(\"user might me disconnected,\")\n                console.log(\"ResetSlot\")\n                if (!self.state.isSlotAvailable) {\n                    self.setState({\n                        showRest: true\n                    })\n                    self.props.slotReset()\n                } else {\n                    console.log(\"No need to show resetButton\");\n                }\n\n            } else {\n                console.log(\"user is still here\")\n            }\n        }\n    }\n\n    getParticipantClass = (participant, participants) => {\n        let list = participants;\n        if (Object.keys(this.state.participants).length > Object.keys(list).length) {\n            list = this.state.participants\n        }\n        let keys = Object.keys(list)\n        for (let i = 0; i < keys.length; i++) {\n            if (participant.sid === list[keys[i]].sid) {\n                return `CallBox_${i + 2}`\n            }\n        }\n        return `CallBox_${keys.length + 1}`\n    }\n\n    freeParticipantClass = (participant) => {\n        let keys = Object.keys(this.callboxMap)\n        for (let i = 0; i < keys.length; i++) {\n            console.log(participant, this.callboxMap[keys[i]])\n            if (this.callboxMap[keys[i]] === participant.sid) {\n                this.callboxMap = {\n                    ...this.callboxMap,\n                    [keys[i]]: null\n                }\n                return\n            }\n        }\n    }\n\n    getParticipantClassUsingMap = (participant) => {\n        let keys = Object.keys(this.callboxMap)\n        for (let i = 0; i < keys.length; i++) {\n            if (!this.callboxMap[keys[i]]) {\n                this.callboxMap = {\n                    ...this.callboxMap,\n                    [keys[i]]: participant.sid,\n                }\n                console.log(keys[i], this.callboxMap[keys[i]])\n                return `CallBox_${keys[i]}`\n            }\n        }\n        return `CallBox_4`\n    }\n\n    participantConnected(participant) {\n        console.log(participant);\n        const participants = this.state.participants;\n        participants.push(participant);\n        this.setState({ participants: participants })\n        console.log(participants.length)\n        console.log(\"agagagaGag\"+this.state.wegotourselfacall);\n        if(participants.length > 0){\n            this.setState({ wegotourselfacall: true });\n            console.log(this.state.wegotourselfacall);\n        }\n        \n        if (participants.length > 3) {\n            const doc = document.querySelector('#overlayContent')\n            if (doc.classList.contains('caller_4')) {\n                doc.classList.remove('caller_4')\n            }\n            if (!doc.classList.contains('caller_8')) {\n                doc.classList.add('caller_8')\n                this.currentLayoutClass = 'caller_8'\n            }\n        }\n\n        const parentDiv = document.createElement('div');\n        parentDiv.id = participant.sid;\n        parentDiv.classList.add(\"callingBox__video\");\n        parentDiv.classList.add(\"callbox_d\");\n        parentDiv.classList.add(this.getParticipantClassUsingMap(participant));\n\n\n        const div = document.createElement('div');\n        div.classList.add(\"callingBox__video-container\");\n\n        const span = document.createElement('span')\n        span.id = \"caller-name\";\n        span.classList.add(\"callingBox__nameTag\");\n\n        let colorClass = \"userInital--color\" + (Math.floor(Math.random()) * 2 + 1)\n        span.classList.add(colorClass);\n        var name = participant.identity;\n        var rgx = new RegExp(/(\\p{L}{1})\\p{L}+/, 'gu');\n\n        var initials = [...name.matchAll(rgx)] || [];\n\n        initials = (\n            (initials.shift()?.[1] || '') + (initials.pop()?.[1] || '')\n        ).toUpperCase();\n\n        // if(initials!==\"\")\n        //     span.innerText = initials;\n        // else\n        span.innerText = getInitals(participant.identity)\n        div.appendChild(span);\n\n        const spanName = document.createElement('span')\n        spanName.id = \"caller-name\";\n        spanName.classList.add(\"username-bar\");\n        spanName.innerText = participant.identity\n        div.appendChild(spanName);\n\n        const button = document.createElement('button')\n        button.classList.add(\"icon-btn\");\n        const icon = document.createElement('i')\n        icon.classList.add(\"icon-speaker\");\n        button.appendChild(icon);\n        div.appendChild(button);\n\n        const videoDiv = document.createElement('div');\n        videoDiv.id = \"video\";\n        videoDiv.classList.add(\"callingBox__video-wrapper\");\n        videoDiv.classList.add(\"has-video\");\n        div.appendChild(videoDiv);\n\n        parentDiv.appendChild(div);\n\n        this.remoteMedia.appendChild(parentDiv);\n\n        participant.tracks.forEach(publication => {\n            if (publication.track) {\n                this.trackSubscribed([publication.track], videoDiv);\n            }\n            publication.on('subscribed', this.handleTrackEnabled);\n        });\n\n        participant.on('trackSubscribed', track => {\n            if (track.kind == 'video') {\n                videoDiv.setAttribute(\"videoId\", track.sid);\n            } else {\n                videoDiv.setAttribute(\"audioId\", track.sid);\n            }\n            this.trackSubscribed([track], videoDiv);\n        });\n\n        participant.on('trackUnsubscribed', track => {\n            this.stopRemoteSharedScreen([track]);\n        });\n    }\n\n\n    participantLeaveRoom = (participant) => {\n\n        if (this.state.participants.length > 0) {\n            let participants = this.state.participants;\n            participants = participants.filter(par => par.sid != participant.sid);\n            // console.log(participants);\n            if (!this.props.isOfficial && participants.length == 0) {\n                this.props.showPopup();\n            }\n            this.freeParticipantClass(participant)\n            this.setState({ participants: participants })\n        }else{\n            \n            this.setState({ wegotourselfacall: false });\n        }\n\n        if (this.props.isOfficial) {\n            console.log(\"Participant '\" + participant.identity + \"' left the room\");\n            console.log(\"Client id => '\" + this.state.clientIdentity + \" \");\n\n            if (participant.identity === this.state.clientIdentity) {\n                //wait for 6 sec check data to reset\n                var self = this;\n                setTimeout(function () {\n                    if (!self.state.isSlotAvailable) {\n                        console.log(\"we should wait for 20 moreSeconds \");\n                        self.setState({\n                            showRest: true\n                        })\n                        self.props.slotReset()\n                    } else {\n                        console.log(\"No need to show resetButton\");\n                    }\n                }, 8000);\n            }\n        }\n        document.getElementById(participant.sid).remove();\n    }\n\n    participantDisconnected = (participant) => {\n\n        if (this.state.participants.length > 0) {\n            let participants = this.state.participants;\n            participants = participants.filter(par => par.sid != participant.sid);\n            this.setState({ participants: participants })\n        }\n        console.log(\"Participant '\" + participant.identity + \"' left the room\");\n        console.log(\"Client id => '\" + this.state.clientIdentity + \" \");\n        document.getElementById(participant.sid).remove();\n        this.freeParticipantClass(participant)\n    }\n\n    trackSubscribed(tracks, container) {\n        tracks.forEach(track => {\n            if (track.name != \"screen\") {\n                container.appendChild(track.attach());\n                if (track.isEnabled) {\n                    this.handleParticipantTrackEnabled(track);\n                } else {\n                    this.handleParticipantTrackDisabled(track);\n                }\n            }\n            else {\n                this.handleRemoteSharedScreen([track]);\n                this.stopLocalScreenShare();\n            }\n        });\n    }\n\n    attachLocalParticipantTracks(participant, container) {\n        let tracks = Array.from(participant.tracks.values());\n        tracks.forEach(publication => {\n            container.appendChild(publication.track.attach());\n        });\n    }\n\n    leaveRoom() {\n        if (typeof window.parent.leaveCall !== \"undefined\")\n            window.parent.leaveCall();\n    }\n    leaveTheCall() {\n        if (this.state.activeRoom) {\n            this.state.activeRoom.disconnect();\n            this.setState({ hasJoinedRoom: false, localMediaAvailable: false });\n        }\n    }\n    handleTrackEnabled(track) {\n        track.on('enabled', () => this.handleParticipantTrackEnabled(track));\n        track.on('disabled', () => this.handleParticipantTrackDisabled(track));\n    }\n\n    handleParticipantTrackEnabled(track) {\n        if (track.kind == 'video') {\n            let video = document.querySelector(`[videoid=\"${track.sid}\"]`);\n            video.parentElement.classList.remove(\"callingBox__video-container--audio\");\n            video.classList.remove(\"d-none\");\n        } if (track.kind == 'audio') {\n            let name = document.querySelector(`[audioid=\"${track.sid}\"]`).parentElement.firstChild;\n            name.classList.add(\"user-speaking\");\n            let button = document.querySelector(`[audioid=\"${track.sid}\"]`).parentElement.childNodes[1];\n            button.classList.add(\"active\");\n        }\n    }\n\n    handleParticipantTrackDisabled(track) {\n        if (track.kind == 'video') {\n            let video = document.querySelector(`[videoid=\"${track.sid}\"]`);\n            video.parentElement.classList.add(\"callingBox__video-container--audio\");\n            video.classList.add(\"d-none\");\n        } if (track.kind == 'audio') {\n\n            let name = document.querySelector(`[audioid=\"${track.sid}\"]`).parentElement.firstChild;\n            name.classList.remove(\"user-speaking\");\n\n            let button = document.querySelector(`[audioid=\"${track.sid}\"]`).parentElement.childNodes[1];\n            button.classList.remove(\"active\");\n        }\n    }\n\n    onCameraButtonClick(event) {\n        event.preventDefault();\n\n        if (this.state.activeRoom) {\n            if (this.state.videoEnabled) {\n                this.state.activeRoom.localParticipant.videoTracks.forEach(pub => {\n                    if (pub.track.name != \"screen\") {\n                        pub.track.disable();\n                    }\n                });\n            } else {\n                this.state.activeRoom.localParticipant.videoTracks.forEach(pub => {\n                    if (pub.track.name != \"screen\") {\n                        pub.track.enable();\n                    }\n                });\n            }\n            this.setState({ videoEnabled: !this.state.videoEnabled });\n        }\n    }\n\n    onAudioButtonClick(event) {\n        event.preventDefault();\n        if (this.state.activeRoom) {\n            if (this.state.audioEnabled) {\n                this.state.activeRoom.localParticipant.audioTracks.forEach(pub => {\n                    pub.track.disable();\n                });\n            } else {\n                this.state.activeRoom.localParticipant.audioTracks.forEach(pub => {\n                    pub.track.enable();\n                });\n            }\n            this.setState({ audioEnabled: !this.state.audioEnabled });\n        }\n    }\n    onHangUpButtonClick(event){\n        event.preventDefault();\n        if (typeof window.parent.leavevRoomCallNow !== \"undefined\")\n            window.parent.leavevRoomCallNow();\n    }\n\n    shareScreen(event) {\n        event.preventDefault();\n        if (this.state.activeRoom) {\n            if (this.state.screenTrack == null) {\n                this.startScreenShare();\n            } else {\n                this.stopLocalScreenShare();\n            }\n        }\n    }\n\n    _startScreenCapture() {\n        if (navigator.getDisplayMedia) {\n            return navigator.getDisplayMedia({ video: true });\n        } else if (navigator.mediaDevices.getDisplayMedia) {\n            return navigator.mediaDevices.getDisplayMedia({ video: true });\n        } else {\n            return navigator.mediaDevices.getUserMedia({ video: { mediaSource: 'screen' } });\n        }\n    }\n\n    startScreenShare() {\n        const that = this;\n\n        if (this.state.remoteScreens.length > 0) {\n            //Show Notification screen already shared\n            console.log(\"Already Shared\");\n            this.showNotification({ line1: \"You can't Share Screen right now.\", line2: \"Someone is already sharing.\", timeout: 10000 });\n            return;\n        }\n\n\n        this._startScreenCapture().then((stream) => {\n            const audioTracks = stream.getAudioTracks().map(track => new LocalAudioTrack(track));\n            const videoTracks = stream.getVideoTracks().map(track => {\n                return new LocalVideoTrack(track, { name: \"screen\" });\n            });\n            const tracks = audioTracks.concat(videoTracks);\n            that.handleLocalSharedScreen(tracks);\n            stream.getTracks()[0].onended = () => that.stopLocalScreenShare();\n            this.openWhiteboardLayout()\n        });\n\n    }\n\n    openWhiteboardLayout = () => {\n        const doc = document.querySelector('#overlayContent')\n        const callerClass = 'caller_whiteboard'\n        if (doc.classList.contains(this.currentLayoutClass)) {\n            doc.classList.remove(this.currentLayoutClass)\n        }\n        doc.classList.add(callerClass)\n    }\n    closeWhiteboardLayout = () => {\n        const doc = document.querySelector('#overlayContent')\n        const callerClass = 'caller_whiteboard'\n        if (doc.classList.contains(callerClass)) {\n            doc.classList.remove(callerClass)\n        }\n        doc.classList.add(this.currentLayoutClass)\n    }\n\n    stopRemoteSharedScreen(tracks) {\n        let remoteScreens = this.state.remoteScreens;\n\n        tracks.forEach(track => {\n            track.detach().forEach(element => element.remove());\n            remoteScreens = remoteScreens.filter(remoteScreen => track.id != remoteScreen.id);\n        });\n        this.closeWhiteboardLayout();\n        this.setState({ remoteScreens: remoteScreens });\n        this.setState({ remoteScreenShared: false });\n\n\n    }\n\n    handleRemoteSharedScreen(tracks) {\n        const remoteScreens = this.state.remoteScreens;\n\n        tracks.forEach(track => {\n            document.getElementById('screen-share').appendChild(track.attach());\n            remoteScreens.push(track);\n        })\n        this.openWhiteboardLayout()\n        this.setState({ remoteScreens: remoteScreens });\n        this.setState({ remoteScreenShared: true });\n        this.setState({ showWhiteborad: false });\n\n    }\n\n    handleLocalSharedScreen(tracks) {\n        this.setState({ screenTrack: tracks });\n        this.state.activeRoom.localParticipant.publishTracks(tracks);\n        this.setState({ screenShared: true });\n        tracks.forEach(track => {\n            document.getElementById('screen-share').appendChild(track.attach());\n        })\n    }\n\n    stopLocalScreenShare() {\n        try {\n            if (this.state.activeRoom && this.state.screenTrack && this.state.screenShared) {\n                this.state.activeRoom.localParticipant.unpublishTracks(this.state.screenTrack);\n                this.state.screenTrack.forEach(track => {\n                    track.stop();\n                    track.detach().forEach(element => element.remove())\n                });\n                this.closeWhiteboardLayout();\n                this.setState({ screenTrack: null });\n                this.setState({ screenShared: false });\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    trackUnsubscribed(track) {\n        track.detach().forEach(element => element.remove());\n    }\n\n    openFullscreen() {\n        let elem = document.getElementById(\"screen-share\").children[1];\n\n        if (elem.requestFullscreen) {\n            elem.requestFullscreen();\n        } else if (elem.mozRequestFullScreen) { /* Firefox */\n            elem.mozRequestFullScreen();\n        } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n            elem.webkitRequestFullscreen();\n        } else if (elem.msRequestFullscreen) { /* IE/Edge */\n            elem.msRequestFullscreen();\n        }\n    }\n\n\n    render() {\n\n        const participants = this.state.participants;\n        const length = participants.length + 1;\n        let view = \"auto\";\n\n        if (length <= 1) {\n            view = \"auto\";\n        } else if (length <= 4) {\n            view = \"auto auto\"\n        } else if (length <= 6) {\n            view = \"auto auto auto\"\n        } else if (length <= 8) {\n            view = \"auto auto auto auto\"\n        }\n\n        let remoteShared = this.state.remoteScreens.length > 0;\n\n        return (\n            <>\n                <section className=\"callingBox\">\n                    {/* <header className=\"headerBox headerBox__gradient\">\n                        <div className=\"link-btn link-btn--left\">\n                            <img src=\"assets/images/abbott-logo-vector 1.png\" alt=\"\" />\n                            <span>{this.state.roomName}</span>\n                        </div>\n                    </header> */}\n\n                    {this.state.showNotification &&\n                        <div className=\"call-end-notification\">{this.state.notification.line1}<span>{this.state.notification.line2}</span>\n                        </div>\n                    }\n\n                    <div className=\"main3DContainer\" ref={this.main3dContainer}>\n                        <div id=\"child3DContainer\" ref={this.child3dContainer} style={this.state.child3dContainerStyle}>\n\n                            {/* <img\n                                id=\"FrameVideo\"\n                                src={'/assets/images/Frame.jpg'}\n                                alt=\"MainSceneImage\"\n                            ></img> */}\n\n                            <div id=\"overlayContent\"\n                                style={{\n                                    height: 'calc(100vh - 5rem)',\n                                    width: 'calc(100vh * 2.33)'\n                                }}\n                                ref={this.setRemoteMediaRef}\n                                className=\"caller_8\"\n                            >\n                                <div className=\"callingBox__video CallBox_1 callbox_d\" style={{ display: 'block' }}>\n                                    <div className={`callingBox__video-container ${this.state.videoEnabled ? \" \" : \" callingBox__video-container--audio \"}`}>\n                                        <span className={`callingBox__nameTag ${this.state.audioEnabled ? \" user-speaking \" : \"\"} `}> {this.context.displayName ? getInitals(this.context.displayName) : 'You'}</span>\n                                        <span className=\"username-bar\">\n                                            You\n                                        </span>\n                                        {/* {`${this.props.userName} (me)`} */}\n                                        <div className={`callingBox__video-wrapper has-video ${this.state.videoEnabled ? \"\" : \"d-none\"}`}\n                                            id=\"local-media\" ref={this.setLocalMediaRef}>\n\n                                        </div>\n                                    </div>\n                                </div>\n\n                                 <div id=\"loadingPPL\" className=\"callingBox__video CallBox_2 callbox_d\" style={{display: this.state.wegotourselfacall?\"none\":\"block\"}}>\n                                    <div className=\"nouser\">\n                                        {/* <img alt=\"NoUser\" src=\"/assets/images/user.png\"></img> */}\n                                        <div style={{    textAlign: \"center\",fontSize: \"1rem\",margin: \"0px 3rem\"}}>Wating for others to join...</div>\n                                    </div>\n                                </div>\n                                {/*\n                                <div className=\"callingBox__video CallBox_3 callbox_d\">\n                                    <div className=\"nouser\">\n                                        <img alt=\"NoUser\" src=\"/assets/images/user.png\"></img>\n                                        <div>No User</div>\n                                    </div>\n                                </div>\n                                <div className=\"callingBox__video CallBox_4 callbox_d\">\n                                    <div className=\"nouser\">\n                                        <img alt=\"NoUser\" src=\"/assets/images/user.png\"></img>\n                                        <div>No User</div>\n                                    </div>\n                                </div> */}\n\n                                {/* <div className=\"callingBox__video CallBox_5 callbox_d\">\n                                     <div className=\"nouser\">\n                                        <img alt=\"NoUser\" src=\"/assets/images/user.png\"></img>\n                                        <div>No User</div>\n                                    </div>\n                                </div>\n                                <div className=\"callingBox__video CallBox_6 callbox_d\">\n                                    <div className=\"nouser\">\n                                        <img alt=\"NoUser\" src=\"/assets/images/user.png\"></img>\n                                        <div>No User</div>\n                                    </div>\n                                </div> */}\n                                {/* <div className=\"callingBox__video CallBox_7 callbox_d\">\n                                    <div className=\"nouser\">\n                                        <img alt=\"NoUser\" src=\"/assets/images/user.png\"></img>\n                                        <div>No User</div>\n                                    </div>\n                                </div>\n                                <div className=\"callingBox__video CallBox_8 callbox_d\">\n                                    <div className=\"nouser\">\n                                        <img alt=\"NoUser\" src=\"/assets/images/user.png\"></img>\n                                        <div>No User</div>\n                                    </div>\n                                </div>  */}\n\n                                <div className={`shared-screenBox has-video ${this.state.screenShared || remoteShared ? \"active\" : \"\"}`} id=\"screen-share\">\n                                    <button className=\"full-screen-btn\" onClick={this.openFullscreen}>\n                                        <i className=\"icon-full-screen\"></i>\n                                    </button>\n                                </div>\n\n                                {\n                                    this.state.showWhiteborad &&\n                                    <div className=\"whiteboardContainer\">\n                                        <div className=\"whiteboardHeader\">\n                                            <div>ZS Discussion Board</div>\n                                            <img alt=\"\" src=\"/assets/images/Cross.png\" onClick={(e) => this.handleWhiteBoardButton(e, false)}\n                                            ></img>\n                                        </div>\n                                        <div class=\"blocker platformStart\">\n                                            <div class=\"lds-dual-ring\"></div>\n                                            <div>Loading...</div>\n                                        </div>\n                                        {/* <iframe width=\"100%\" height=\"100%\" src=\"https://awwapp.com/b/uy8rszhu7nvse/\"></iframe> */}\n                                    </div>\n                                }\n\n                            </div>\n\n                            {/* <div className={`callingBox__video-wrapper  callingBox__video-mainConatiner ${this.state.screenShared || remoteShared ? \"shared-active\" : \"\"}`}\n                                style={{ gridTemplateColumns: view }}\n                                ref={this.setRemoteMediaRef} \n                                >\n                            </div> */}\n                        </div>\n\n\n\n                    </div>\n\n\n                    <div className=\"callingBox__buttons callingBox__buttons__gradient\">\n                        {/* <div className=\"link-btn link-btn--left\">\n                            <img src=\"assets/images/abbott-logo-vector 1.png\" alt=\"\" />\n                            <span>{this.state.roomName}</span>\n                        </div> */}\n                        <ul className=\"callingBox__buttons-list\">\n                            <li>\n                                <button className=\"icon-btn\" onClick={this.onCameraButtonClick} style={!this.state.videoEnabled ? { backgroundColor: \"rgb(150 150 150)\" } : { backgroundColor: \"rgb(111 111 111)\" }}>\n                                    <i className={this.state.videoEnabled ? 'icon-video-btn' : 'icon-video-btn-mute'}></i>\n                                </button>\n                            </li>\n                            <li style={{ display: \"none\" }}>\n                                <button className=\"icon-btn icon-btn--red\" onClick={this.leaveRoom}>\n                                    <i className=\"icon-phone\"></i>\n                                </button>\n                            </li>\n                            <li>\n                                <button className=\"icon-btn\" onClick={this.onAudioButtonClick} style={!this.state.audioEnabled ? { backgroundColor: \"rgb(150 150 150)\" } : { backgroundColor: \"rgb(111 111 111)\" }}>\n                                    <i className={this.state.audioEnabled ? 'icon-mic-btn' : 'icon-mic-btn-mute'}></i>\n                                </button>\n                            </li> \n                            <li>\n                                <button className=\"icon-btn\" onClick={this.onHangUpButtonClick} style={{backgroundColor: \"rgb(111 111 111)\"}}>\n                                    <i className={'icon-end-call'}></i>\n                                </button>\n                            </li>\n                        </ul>\n                        <div>\n\n                        </div>\n                        {/* {\n                            !this.state.remoteScreenShared &&\n                            <>\n                                {\n                                    !this.state.screenShared &&\n                                    <>\n                                        {\n                                            this.state.showWhiteborad ?\n                                                (<button onClick={(e) => {\n                                                    this.handleWhiteBoardButton(e, false)\n                                                }} className=\"link-btn\"\n                                                    style={{ right: '17rem' }}\n                                                ><i className=\"icon-external-link\"></i>\n                                                    <span>\n                                                        Close Discussion Board\n                                    </span>\n                                                </button>)\n                                                : (<button onClick={(e) => {\n                                                    this.handleWhiteBoardButton(e, true)\n                                                }} className=\"link-btn\"\n                                                    style={{ right: '17rem' }}\n                                                ><i className=\"icon-external-link\"></i>\n                                                    <span>\n                                                        Discussion Board\n                                    </span>\n                                                </button>)\n                                        }\n                                    </>\n                                }\n                                {\n                                    !this.state.showWhiteborad &&\n                                    <button onClick={this.shareScreen} className=\"link-btn\"><i className=\"icon-external-link\"></i>\n                                        <span>{!this.state.screenShared ? \"Share your screen\" : \"Stop sharing\"}</span></button>\n                                }\n                            </>\n                        } */}\n                        {/* {this.props.isOfficial && this.state.showRest && <button onClick={(e) => this.handleWhiteBoardButton(e, true)} className=\"link-btn pos-right-18\">\n                            <span>ResetState</span></button>} */}\n                    </div>\n\n                </section>\n                {/* {\n                    this.state.showWhiteborad &&\n                    <div className=\"whiteboardContainer\">\n                        <div className=\"whiteboardHeader\">\n                            <div>ZS Discussion Board</div>\n                            <img alt=\"\" src=\"/assets/images/Cross.png\" onClick={(e) => this.handleWhiteBoardButton(e, false)}\n                            ></img>\n                        </div>\n                        <div class=\"blocker platformStart\">\n                            <div class=\"lds-dual-ring\"></div>\n                            <div>Loading...</div>\n                        </div>\n                        <iframe width=\"100%\" height=\"100%\" src=\"https://awwapp.com/b/uy8rszhu7nvse/\"></iframe>\n                    </div>\n                } */}\n\n            </>\n        );\n    }\n\n\n    handleWhiteBoardButton = (e, value) => {\n        e.preventDefault()\n        this.setState({\n            showWhiteborad: value\n        })\n\n        const doc = document.querySelector('#overlayContent')\n        if (doc.classList.contains('caller_4')) {\n            doc.classList.remove('caller_4')\n        }\n\n        const callerClass = 'caller_whiteboard'\n        if (value) {\n            if (doc.classList.contains(this.currentLayoutClass)) {\n                doc.classList.remove(this.currentLayoutClass)\n            }\n            doc.classList.add(callerClass)\n        } else {\n            if (doc.classList.contains(callerClass)) {\n                doc.classList.remove(callerClass)\n            }\n            doc.classList.add(this.currentLayoutClass)\n        }\n    }\n\n}\n\nexport default MultiVideoCall;\n\n","import React, { Component } from \"react\";\nimport './Login.css';\nimport './Login.css';\nimport Firebase, { FirebaseContext } from \"../../firebase\";\n\nclass Login extends Component {\n    static contextType = FirebaseContext;\n\n    state = {\n        email: '',\n        name: '',\n        error: false,\n        errorMessage: \"\",\n        employeId: '',\n        _loading: false,\n        forceDisable: false,\n        forceUpdate: false,\n    };\n\n    componentDidMount = () => {\n        window.showLoginError = this.showLoginError\n    }\n\n    onInputChange = event => {\n        event.preventDefault();\n        let value = event.target.value\n        if (event.target.name === 'employeId') {\n            value = value.substr(0, 10)\n        }\n        this.setState({ [event.target.name]: value });\n    };\n\n    showLoginError = (err) => {\n        this.setState({\n            error: true,\n            errorMessage: err.message ? err.message : err\n        });\n    }\n\n    validateEmail = (email) => {\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    onFormSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            this.setState({\n                error: false,\n                forceDisable: true\n            })\n            let employeId = this.state.employeId.toLowerCase().replace(/\\s+/g, '');;\n            let email = `${employeId}@event.com`;\n            let password = `${employeId}123456`;\n            let name = this.state.name;\n            await this.context.loadUser(email, password, name,true, employeId);\n        }\n        catch (err) {\n            this.setState({\n                forceDisable: false\n            })\n            let error = '';\n            switch (err.code) {\n                case \"auth/wrong-password\":\n                    error = \"Invalid username and password.\";\n                    break;\n                case \"auth/user-not-found\":\n                    error = \"User not registered\";\n                    break;\n                case \"auth/too-many-requests\":\n                    error = \"Too many invalid requests, please wait for 60 seconds before retrying\";\n                    break;\n                case \"NoUserFound\":\n                    error = \"User not registered\"\n                    break\n                default:\n                    error = err.message\n            }\n            this.setState({\n                error: true,\n                errorMessage: error,\n            })\n        }\n    };\n\n\n    render() {\n        if (this.state._loading) {\n            return <img alt=\"loading\" src=\"/images/loader.gif\" />;\n        }\n        return (\n            <section className=\"landing-page min-height-full\">\n                <aside className=\"landing-pageBox d-flex justify-content-between align-items-start min-height-full image-bg\" style={{ backgroundImage: `url(/assets/images/login.jpg)` }}>\n                </aside>\n                <aside className=\"signinBox min-height-full\">\n                    {\n                        this.props.showLoggingIn &&\n                        <>\n                            <div className=\"signinBox__heading\">\n                                <div className=\"middle\"></div>\n                                {/* <div className=\"left\"></div>\n                                <div className=\"right\"></div> */}\n                            </div>\n                            <br></br>\n                            <div className=\"loaderContainer\">\n                                <img src=\"/assets/images/Loader.gif\" alt=\"loader\" ></img>\n                                <div>Logging you in...</div>\n                            </div>\n                        </>\n                    }\n                    {\n                        !this.props.showLoggingIn &&\n                        <>\n                            <form onSubmit={this.onFormSubmit}>\n                                <div className=\"signinBox__heading\">\n                                    <div className=\"middle\"></div>\n                                    {/* <div className=\"left\"></div>\n                                    <div className=\"right\"></div> */}\n                                </div>\n                                <div className=\"signinBox__body pd-t50\">\n                                    {/* <div className=\"form-group mg-b50\">\n                                        <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name} placeholder=\"ENTER YOUR NAME\" onChange={this.onInputChange} required={true} />\n                                    </div> */}\n                                    <div className=\"signinBox_title\">\n                                        Participant Login\n                                    </div>\n                                    <div className=\"form-group mg-b50\">\n                                        <input type=\"text\" className=\"form-control form-control-login\" name=\"name\" value={this.state.name} placeholder=\"Enter Name\" onChange={this.onInputChange} autoComplete=\"off\"\n                                            autoCorrect=\"off\" required={true} />\n                                    </div>\n                                    <div className=\"form-group mg-b50\">\n                                        <input type=\"number\" className=\"form-control form-control-login\" name=\"employeId\" value={this.state.employeId} placeholder=\"Enter Phone Number\" onChange={this.onInputChange} autoComplete=\"off\"\n                                            autoCorrect=\"off\" required={true} />\n                                    </div>\n                                    {this.state.error && <div className=\"mg-b50\" style={{ color: \"red\", fontSize: \"1.25rem\" }}>{this.state.errorMessage}</div>}\n                                    <div className=\"text-center\">\n                                        <button\n                                            // className=\"btn btn-lg btn-lg-v2 btn-yellow\"\n                                            className=\"loginBtn\"\n                                            disabled={this.state.forceDisable ? true : !this.state.employeId.length > 0} >LOG IN</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </>\n                    }\n                </aside>\n            </section>\n        );\n    }\n\n}\n\nexport default Login;\n","// eslint-disable-next-line no-unused-vars\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { FirebaseContext } from \"./firebase\";\nimport { createHashHistory } from \"history\";\nimport Meeting from './components/meeting/Meeting';\nimport MultiVideoCall from \"./components/videoCalling/MultiVideoCall\";\nimport swal from 'sweetalert';\nimport { auth } from \"firebase\";\nimport Login from \"./components/login/Login\";\n\n\nexport const history = createHashHistory();\n\nconst rooms = [\n  {\n    id: 1, name: \"Room-1\", slots: [\n      { id: \"tabel-1\", name: \"tabel-1\", available: true, adminID: [\"9991004781@event.com\"], userId: \"\" },\n    ]\n  },\n  // {\n  //   id: 2, name: \"SyncAV Plus CRT Technology\", slots: [\n  //     { id: \"Feature2-slot-1\", name: \"SyncAV Plus CRT Technology Team A\", available: true, adminID: [\"0123456787@event.com\"], userId: \"\" },\n  //     { id: \"Feature2-slot-2\", name: \"SyncAV Plus CRT Technology Team B\", available: true, adminID: [\"0123456786@event.com\"], userId: \"\" },\n  //   ]\n  // },\n  // {\n  //   id: 3, name: \"VF Therapy Assurance\", slots: [\n  //     { id: \"Feature3-slot-1\", name: \"VF Therapy Assurance Team A\", available: true, adminID: [\"0123456785@event.com\"], userId: \"\" },\n  //     { id: \"Feature3-slot-2\", name: \"VF Therapy Assurance Team B\", available: true, adminID: [\"0123456784@event.com\"], userId: \"\" },\n  //   ]\n  // },\n  // {\n  //   id: 4, name: \"MRI\", slots: [\n  //     { id: \"Feature4-slot-1\", name: \"MRI Team A\", available: true, adminID: [\"0123456783@event.com\"], userId: \"\" },\n  //     { id: \"Feature4-slot-2\", name: \"MRI Team B\", available: true, adminID: [\"0123456782@event.com\"], userId: \"\" },\n  //   ]\n  // },\n  // {\n  //   id: 5, name: \"my Merlin pulse app\", slots: [\n  //     { id: \"Feature5-slot-1\", name: \"my Merlin pulse app Team A\", available: true, adminID: [\"0123456781@event.com\"], userId: \"\" },\n  //     { id: \"Feature5-slot-2\", name: \"my Merlin pulse app Team B\", available: true, adminID: [\"0123456780@event.com\"], userId: \"\" },\n  //   ]\n  // },\n];\n\n\nclass App extends Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    user: null,\n    rooms: null,\n    room: null,\n    showVideoCall: true,\n    isCurrentMeetingRoomOfficial: false,\n    showWhiteborad: true,\n  }\n  MeetingRoomMessage = \"\";\n  busyRoomMessage = \"\";\n  videoCall = React.createRef();\n  activeMeetingRoomDetails = {}\n  userId = null;\n\n  getUserId = (user) => {\n    let userId = \"\";\n    if (user.phoneNumber) {\n      userId = `${user.phoneNumber}`\n    } else if (user.email !== null) {\n      userId = user.email;\n      userId = userId.toLowerCase();\n      // userId = userId.replace(/[&\\/\\\\#,+$~%.'\":*?<>{}]/g, '');\n    }\n    return userId\n  }\n\n  componentDidMount() {\n    // this.context.saveMeetingRoomData(rooms); //can be used to save data to firebase\n    // this.context.getMeetingRoomData();\n    this.listener = this.context.auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        this.userId = this.getUserId(authUser)\n        console.log(this.userId);\n        console.log(authUser.email);\n        this.context.currentUser = authUser;\n        if (!authUser.displayName) {\n          authUser.updateProfile({\n            displayName: `${authUser.email ? authUser.email.split('@')[0] : authUser.phoneNumber ? authUser.phoneNumber.slice(3) : \"GuestUser\"}`,\n          })\n        }\n        this.setState({\n          user: authUser\n        })\n\n        this.context.updateMeetingRooms = this.updateMeetingRoom;\n        this.context.attachMeetingRoomListener();\n        // this.gettingMeetingRoomErrMessage();\n        this.joinFirstSlot()\n      } else {\n        // this.signIn(\"9991004781@event.com\", \"9991004781\")\n        console.log(\"user not logged in\");\n        this.removeLoader()\n        // if (localStorage.getItem('bypassLogin')) {\n        //   this.signIn(\"0123456789@event.com\", \"0123456789\")\n        // } else {\n        //   window.location.href = \"/login/index.html\";\n        // }\n      }\n    });\n  }\n\n  removeLoader = () => {\n    var load = document.querySelector(\".platformStart\")\n    console.log(load);\n    if (load) { load.remove() }\n  }\n\n  joinFirstSlot = () => {\n    if (this.state.rooms) {\n      this.onSlotJoin(this.state.rooms[0], this.state.rooms[0].slots[0])\n    } else {\n      setTimeout(() => {\n        this.joinFirstSlot()\n      }, 1000)\n    }\n  }\n\n  //#region utility functions\n  signIn = (email, password) => {\n    this.context.auth.signInWithEmailAndPassword(email, password)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n\n  }\n\n  gettingMeetingRoomErrMessage = async () => {\n    const Messagedoc = await this.context.db.collection(\"backStage\").doc(\"meetingRoomMessage\").get();\n    if (Messagedoc.data) {\n      this.MeetingRoomMessage = Messagedoc.data().meetingRoomMsg;\n      this.busyRoomMessage = Messagedoc.data().busyRoomMessage;\n    }\n  }\n\n  updateMeetingRoom = () => {\n    this.setState({\n      rooms: this.context.meetingRooms\n    });\n  }\n\n  closeMeetingRoom = () => {\n    if (localStorage.getItem(\"lastLocation\")) {\n      window.location.href = localStorage.getItem(\"lastLocation\");\n    } else {\n      window.location.href = \"/login/index.html\";\n    }\n  }\n\n  showInfoPopUp(message) {\n    //console.log(\"showInfoPopUp\", message);\n    swal({\n      title: message, // `Event will start at ${roomStatus.timeLeft}`,\n      // icon: \"info\",\n      className: \"video-swal-modal\",\n      button: \"continue\",\n    });\n  }\n\n  showMeetingRoomPopup = () => {\n    // this.showInfoPopUp(this.MeetingRoomMessage);\n  }\n\n  showMeetingRoomBusyPopup = () => {\n    // this.showInfoPopUp(this.busyRoomMessage);\n  }\n\n  checkForSlotAdmin = (adminArray, userId) => {\n    if (adminArray && userId) {\n      if (adminArray.indexOf(userId) != -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    else {\n      return false;\n    }\n  }\n\n  onSlotJoin = (activeRoom, slot) => {\n    if (window.parent.hideCrossBtn) {\n      window.parent.hideCrossBtn()\n    }\n    this.activeMeetingRoomDetails =\n    {\n      roomName: activeRoom.name,\n      roomId: activeRoom.id,\n      slotId: slot.id,\n      slot: slot\n    }\n    var isOfficial = this.checkForSlotAdmin(slot.adminID, this.userId);\n    console.log(this.activeMeetingRoomDetails);\n    // \n    // this.addAnalytics(this.activeMeetingRoomDetails.roomName)\n    // \n    this.setState({ isCurrentMeetingRoomOfficial: isOfficial })\n    if (!isOfficial) {\n      // window.FirebaseObj.user_AnalyticsHandler(\"Call\", \"enter\");\n      this.context.updateMeetingRoomDataAccLimit(activeRoom.name, activeRoom.id, slot.id, false, (err) => {\n        if (err) {\n          console.log(err);\n          this.showMeetingRoomBusyPopup();\n        } else {\n          this.removeLoader();\n          let room = { roomId: slot.id, roomName: slot.name, roomParentId: activeRoom.id }\n          this.setState({ room: room })\n          this.setState({ showVideoCall: true })\n        }\n      });\n    } else {\n      this.removeLoader();\n      let room = { roomId: slot.id, roomName: slot.name, roomParentId: activeRoom.id }\n      this.setState({ room: room })\n      this.setState({ showVideoCall: true })\n    }\n  };\n\n  onCallDisconnect = (forceExit) => {\n    if (window.parent.showCrossBtn) {\n      window.parent.showCrossBtn()\n    }\n\n    var isOfficial = this.checkForSlotAdmin(this.activeMeetingRoomDetails.slot.adminID, this.userId);\n    if (!isOfficial && !forceExit) {\n      window.FirebaseObj.user_AnalyticsHandler(\"Meeting\", \"enter\");\n      console.log(\"exiting as a normal user\");\n      var activeMeetingRoomDetails = this.activeMeetingRoomDetails;\n      this.context\n        .updateMeetingRoomDataAccLimit(activeMeetingRoomDetails.roomName,\n          activeMeetingRoomDetails.roomId,\n          activeMeetingRoomDetails.slotId, true,\n          function (err) {\n            if (err) {\n              console.log(err);\n            } else {\n              window.open('/index.html', '_self')\n            }\n          });\n    } else {\n      window.open('/index.html', '_self')\n    }\n    this.setState({ showVideoCall: false });\n  }\n\n  updateRoomStatus = () => {\n\n  }\n  currentSlotRest = () => {\n    var self = this;\n    setTimeout(() => {\n      self.context\n        .updateMeetingRoomDataAccLimit(self.activeMeetingRoomDetails.roomName,\n          self.activeMeetingRoomDetails.roomId,\n          self.activeMeetingRoomDetails.slotId, true,\n          function (err) {\n            if (err) {\n              console.log(err);\n            } else {\n\n            }\n          });\n    }, 2500);\n  }\n  //#endregion\n\n  componentWillUnmount() {\n    if (this.listener)\n      this.listener();\n  }\n\n\n  addAnalytics = (roomId) => {\n    this.context.addHotspotAnalytics(roomId, this.context.currentUser)\n  }\n\n  render() {\n    return (\n      <>\n        {\n          !this.state.user &&\n          <Login></Login>\n        }\n        {/* {\n          this.state.user && this.state.rooms && <>\n            <Meeting onHomeClick={this.closeMeetingRoom} rooms={this.state.rooms} onSlotJoin={(activeRoom, slot) => this.onSlotJoin(activeRoom, slot)} userID={this.userId} ></Meeting>\n          </>\n        } */}\n        {this.state.showVideoCall && this.state.user && this.state.user.displayName && this.state.room &&\n          <>\n            <MultiVideoCall\n              userName={this.state.user.displayName}\n              userId={this.userId}\n              room={this.state.room}\n              onCallDisconnect={this.onCallDisconnect}\n              ref={this.videoCall}\n\n              updateRoomStatus={this.updateRoomStatus}\n              isOfficial={this.state.isCurrentMeetingRoomOfficial}\n              liveRooms={this.state.rooms}\n              slotReset={this.currentSlotRest}\n              showPopup={this.showMeetingRoomPopup}\n              showBusyPopup={this.showMeetingRoomBusyPopup}\n              showInfoPopUp={this.showInfoPopUp}\n            ></MultiVideoCall>\n          </>\n        }\n      </>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Firebase, { FirebaseContext } from \"./firebase\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}